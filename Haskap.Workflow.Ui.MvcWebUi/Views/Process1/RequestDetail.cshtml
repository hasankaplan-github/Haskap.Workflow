@using Haskap.Workflow.Application.Dtos.Processes.Process1;
@using Haskap.Workflow.Application.Dtos.Processes;

@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model RequestDetailOutputDto

@{
    var antiforgeryToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    IList<PathOutputDto> availablePaths = ViewBag.AvailablePaths ?? Enumerable.Empty<PathOutputDto>();
}


<!-- Modal -->
<div class="modal fade" id="process1ProgressDataModal" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div id="process1ProgressDataModalContent" class="modal-content">
        </div>
    </div>
</div>


<div class="card">
    <div class="card-header">
        <h3 class="card-title">
            @* <i class="fas fa-text-width"></i> *@
            Talep Detayı
        </h3>
    </div>
    <!-- /.card-header -->
    <div class="card-body">
        <dl>
            <dt>Talebi Açan Kişi</dt>
            <dd>@($"{Model.OwnerUserFirstName} {Model.OwnerUserLastName}")</dd>

            <dt>Talep Verisi</dt>
            <dd>Adı: @Model.Data.FirstName</dd>
            <dd>Soyadı: @Model.Data.LastName</dd>
            
            <dt>Talep Durumu</dt>
            <dd>@Model.CurrentState.DisplayName</dd>
        </dl>
    </div>
    <!-- /.card-body -->
    <div class="card-footer">
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                İşlemler
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton1">
                @foreach (var path in availablePaths)
                {
                    <li><a class="dropdown-item" href="#" onclick="makeProgress('@Model.Id', '@path.Command.Id', @Json.Serialize(path.ViewName));">@path.Command.DisplayName</a></li>
                }
                <li><a class="dropdown-item bg-danger" href="#" onclick="deleteRequest('@Model.Id');">Talebi Sil</a></li>
            </ul>
        </div>
    </div>
    <!-- /.card-footer -->
</div>
<!-- /.card -->




@section Scripts{

    <script src="~/js/modalOperations.js" asp-append-version="true"></script>
    <script src="~/js/process1Operations.js" asp-append-version="true"></script>

    <script>

        function deleteRequest(requestId) {
            Swal.fire({
                icon: 'question',
                title: 'Talebi silmek istediğinizden emin misiniz?',
                //showDenyButton: true,
                showCancelButton: true,
                cancelButtonText: 'İptal',
                confirmButtonText: 'Sil',
                //denyButtonText: `Don't save`,
            }).then((confirmation) => {
                /* Read more about isConfirmed, isDenied below */
                if (confirmation.isConfirmed) {
                    $.ajax({
                        type: "DELETE",
                        headers: {
                            'RequestVerificationToken': '@antiforgeryToken'
                        },
                        url: "@Url.Action("DeleteRequest", "Process1")",
                        data: {
                            requestId: requestId
                        }
                    }).done(function (result, status, xhr) {
                        Swal.fire('Başarıyla silindi.', '', 'success');
                    });
                }
            });
        }

        function makeProgress(requestId, commandId, viewName) {
            if (viewName) {
                //open modal
                // modal içinde kaydet buttonunda /Process1/MakeProgressWithData1 methodu çağırılır
                // her farklı viewName için farklı ViewComponent modal içinde açılır
                // her kaydet methodunda farklı MakeProgressWithData1,2,3,4 çağırılır.
                //ProgressWithNote
                showProgressDataModal(requestId, commandId, viewName);
            } else {
                $.ajax({
                    type: "POST",
                    headers: {
                        'RequestVerificationToken': '@antiforgeryToken'
                    },
                    url: "@Url.Action("MakeProgress", "Process1")",
                    data: {
                        requestId: requestId,
                        commandId: commandId
                    }
                }).done(function (result, status, xhr) {
                    location.reload();
                });
            }
        }

    </script>
}